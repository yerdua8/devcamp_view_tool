[
  {
    "name": "heroku-certs",
    "tag": "1.1.25",
    "version": "1.1.25",
    "topics": null,
    "topic": {
      "name": "certs",
      "description": "a topic for the ssl plugin",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "certs",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "List SSL certificates for an app.",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "certs",
        "command": "add",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "add an SSL certificate to an app",
        "default": false,
        "help": "Example:\n\n $ heroku certs:add example.com.crt example.com.key",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "CRT",
            "optional": false,
            "hidden": false
          },
          {
            "name": "KEY",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "bypass",
            "char": "",
            "description": "bypass the trust chain completion step",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "type",
            "char": "",
            "description": "type to create, either 'sni' or 'endpoint'",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "domains",
            "char": "",
            "description": "domains to create after certificate upload",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "certs",
        "command": "chain",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "print an ordered \u0026 complete chain for a certificate",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "certs",
        "command": "generate",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "generate a key and a CSR or self-signed certificate",
        "default": false,
        "help": "Generate a key and certificate signing request (or self-signed certificate)\nfor an app. Prompts for information to put in the certificate unless --now\nis used, or at least one of the --subject, --owner, --country, --area, or\n--city options is specified.\n\nExample:\n\n $ heroku certs:generate example.com",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "domain",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "selfsigned",
            "char": "",
            "description": "generate a self-signed certificate instead of a CSR",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "keysize",
            "char": "",
            "description": "RSA key size in bits (default: 2048)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "owner",
            "char": "",
            "description": "name of organization certificate belongs to",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "country",
            "char": "",
            "description": "country of owner, as a two-letter ISO country code",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "area",
            "char": "",
            "description": "sub-country area (state, province, etc.) of owner",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "city",
            "char": "",
            "description": "city of owner",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "subject",
            "char": "",
            "description": "specify entire certificate subject",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "now",
            "char": "",
            "description": "do not prompt for any owner information",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "certs",
        "command": "info",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "show certificate information for an SSL certificate",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "name",
            "char": "",
            "description": "name to check info on",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to check info on",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "certs",
        "command": "key",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "print the correct key for the given certificate",
        "default": false,
        "help": "You must pass one single certificate, and one or more keys.\nThe first key that signs the certificate will be printed back.\n\nExample:\n\n $ heroku certs:key example.com.crt example.com.key",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "certs",
        "command": "remove",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "remove an SSL certificate from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "name",
            "char": "",
            "description": "name to remove",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to remove",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "certs",
        "command": "rollback",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "rollback an SSL certificate from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "name",
            "char": "",
            "description": "name to rollback",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to rollback",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "certs",
        "command": "update",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "update an SSL certificate on an app",
        "default": false,
        "help": "Example:\n\n $ heroku certs:update example.com.crt example.com.key",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "CRT",
            "optional": false,
            "hidden": false
          },
          {
            "name": "KEY",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "bypass",
            "char": "",
            "description": "bypass the trust chain completion step",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "name",
            "char": "",
            "description": "name to update",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to update",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "_certs",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "List SSL certificates for an app.",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "_certs",
        "command": "add",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "add an SSL certificate to an app",
        "default": false,
        "help": "Example:\n\n $ heroku certs:add example.com.crt example.com.key",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "CRT",
            "optional": false,
            "hidden": false
          },
          {
            "name": "KEY",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "bypass",
            "char": "",
            "description": "bypass the trust chain completion step",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "type",
            "char": "",
            "description": "type to create, either 'sni' or 'endpoint'",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "domains",
            "char": "",
            "description": "domains to create after certificate upload",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "_certs",
        "command": "chain",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "print an ordered \u0026 complete chain for a certificate",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "_certs",
        "command": "generate",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "generate a key and a CSR or self-signed certificate",
        "default": false,
        "help": "Generate a key and certificate signing request (or self-signed certificate)\nfor an app. Prompts for information to put in the certificate unless --now\nis used, or at least one of the --subject, --owner, --country, --area, or\n--city options is specified.\n\nExample:\n\n $ heroku certs:generate example.com",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "domain",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "selfsigned",
            "char": "",
            "description": "generate a self-signed certificate instead of a CSR",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "keysize",
            "char": "",
            "description": "RSA key size in bits (default: 2048)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "owner",
            "char": "",
            "description": "name of organization certificate belongs to",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "country",
            "char": "",
            "description": "country of owner, as a two-letter ISO country code",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "area",
            "char": "",
            "description": "sub-country area (state, province, etc.) of owner",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "city",
            "char": "",
            "description": "city of owner",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "subject",
            "char": "",
            "description": "specify entire certificate subject",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "now",
            "char": "",
            "description": "do not prompt for any owner information",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "_certs",
        "command": "info",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "show certificate information for an SSL certificate",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "name",
            "char": "",
            "description": "name to check info on",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to check info on",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "_certs",
        "command": "key",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "print the correct key for the given certificate",
        "default": false,
        "help": "You must pass one single certificate, and one or more keys.\nThe first key that signs the certificate will be printed back.\n\nExample:\n\n $ heroku certs:key example.com.crt example.com.key",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "_certs",
        "command": "remove",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "remove an SSL certificate from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "name",
            "char": "",
            "description": "name to remove",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to remove",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "_certs",
        "command": "rollback",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "rollback an SSL certificate from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "name",
            "char": "",
            "description": "name to rollback",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to rollback",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "_certs",
        "command": "update",
        "plugin": "heroku-certs",
        "usage": "",
        "description": "update an SSL certificate on an app",
        "default": false,
        "help": "Example:\n\n $ heroku certs:update example.com.crt example.com.key",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "CRT",
            "optional": false,
            "hidden": false
          },
          {
            "name": "KEY",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "bypass",
            "char": "",
            "description": "bypass the trust chain completion step",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "name",
            "char": "",
            "description": "name to update",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "endpoint",
            "char": "",
            "description": "endpoint to update",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:23.817463962Z"
  },
  {
    "name": "heroku-cli-addons",
    "tag": "1.2.8",
    "version": "1.2.8",
    "topics": null,
    "topic": {
      "name": "addons",
      "description": "manage add-ons",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "addons",
        "plugin": "heroku-cli-addons",
        "usage": "addons [--all|--app APP]",
        "description": "lists your add-ons and attachments",
        "default": true,
        "help": "The default filter applied depends on whether you are in a Heroku app\ndirectory. If so, the --app flag is implied. If not, the default of --all\nis implied. Explicitly providing either flag overrides the default\nbehavior.\n\nExamples:\n\n  $ heroku addons --all\n  $ heroku addons --app acme-inc-www\n\nOverview of Add-ons:\n\n  Add-ons are created with the `addons:create` command, providing a reference\n  to an add-on service (such as `heroku-postgresql`) or a service and plan\n  (such as `heroku-postgresql:hobby-dev`).\n\n  At creation, each add-on is given a globally unique name. In addition, each\n  add-on has at least one attachment alias to each application which uses the\n  add-on. In all cases, the owning application will be attached to the add-on.\n  An attachment alias is unique to its application, and is used as a prefix to\n  any environment variables it exports to the application.\n\n  In this example, a `heroku-postgresql` add-on is created and its given name\n  is `postgresql-deep-6913` with a default attachment alias of `DATABASE`:\n\n    $ heroku addons:create heroku-postgresql --app my-app\n    Creating postgresql-deep-6913... done, (free)\n    Adding postgresql-deep-6913 to my-app... done\n    Setting DATABASE_URL and restarting my-app... done, v5\n    Database has been created and is available\n\n    $ heroku addons --app my-app\n    Add-on                                     Plan       Price\n    ─────────────────────────────────────────  ─────────  ─────\n    heroku-postgresql (postgresql-deep-6913)   hobby-dev  free\n    └─ as DATABASE\n\n  The add-on name and, in some cases, the attachment alias can be specified by\n  the user. For instance, we can add a second database to the app, specifying\n  both these identifiers:\n\n    $ heroku addons:create heroku-postgresql --app my-app --name main-db --as PRIMARY_DB\n    Creating main-db... done, (free)\n    Adding main-db to my-app... done\n    Setting PRIMARY_DB_URL and restarting my-app... done, v6\n    Database has been created and is available\n\n    $ heroku addons --app my-app\n    Add-on                                     Plan       Price\n    ─────────────────────────────────────────  ─────────  ─────\n    heroku-postgresql (main-db)                hobby-dev  free\n    └─ as PRIMARY_DB\n\n    heroku-postgresql (postgresql-deep-6913)   hobby-dev  free\n    └─ as DATABASE\n\n  Attachment aliases can also be specified when making attachments:\n\n    $ heroku addons:attach main-db --app my-app --as ANOTHER_NAME\n    Attaching main-db as ANOTHER_NAME to my-app... done\n    Setting ANOTHER_NAME vars and restarting my-app... done, v7\n\n    $ heroku addons --app my-app\n    Add-on                                     Plan       Price\n    ─────────────────────────────────────────  ─────────  ─────\n    heroku-postgresql (main-db)                hobby-dev  free\n    ├─ as PRIMARY_DB\n    └─ as ANOTHER_NAME\n\n    heroku-postgresql (postgresql-deep-6913)   hobby-dev  free\n    └─ as DATABASE\n\n  For more information, read https://devcenter.heroku.com/articles/add-ons.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "all",
            "char": "A",
            "description": "show add-ons and attachments for all accessible apps",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "return add-ons in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "attach",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "attach add-on resource to a new app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon_name",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "as",
            "char": "",
            "description": "name for add-on attachment",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "overwrite existing add-on attachment with same name",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "create",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "create an add-on resource",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": [
          {
            "name": "service:plan",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "name",
            "char": "",
            "description": "name for the add-on resource",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "as",
            "char": "",
            "description": "name for the initial add-on attachment",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "overwrite existing config vars or existing add-on attachments",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "wait",
            "char": "",
            "description": "watch add-on creation status and exit when complete",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "add",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "create an add-on resource",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": [
          {
            "name": "service:plan",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "name",
            "char": "",
            "description": "name for the add-on resource",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "as",
            "char": "",
            "description": "name for the initial add-on attachment",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "overwrite existing config vars or existing add-on attachments",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "wait",
            "char": "",
            "description": "watch add-on creation status and exit when complete",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "destroy",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "destroy add-on resources",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "force",
            "char": "f",
            "description": "allow destruction even if connected to other apps",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "remove",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "destroy add-on resources",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "force",
            "char": "f",
            "description": "allow destruction even if connected to other apps",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "detach",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "detach an add-on resource from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "attachment_name",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "addons",
        "command": "docs",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "open an add-on's Dev Center documentation in your browser",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "show-url",
            "char": "",
            "description": "show URL, do not open browser",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "info",
        "plugin": "heroku-cli-addons",
        "usage": "addons:info ADDON",
        "description": "Show info about an add-on and its attachments.",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "addons",
        "command": "open",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "open an add-on's dashboard in your browser",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "show-url",
            "char": "",
            "description": "show URL, do not open browser",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "plans",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "list all available plans for an add-on services",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "service",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "rename",
        "plugin": "heroku-cli-addons",
        "usage": "addons:rename ADDON NEW_NAME",
        "description": "Rename an add-on.",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": false,
            "hidden": false
          },
          {
            "name": "name",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "addons",
        "command": "services",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "list all available add-on services",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "addons",
        "command": "upgrade",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "change add-on plan",
        "default": false,
        "help": "See available plans with `heroku addons:plans SERVICE`.\n\nNote that `heroku addons:upgrade` and `heroku addons:downgrade` are the same.\nEither one can be used to change an add-on plan up or down.\n\nhttps://devcenter.heroku.com/articles/managing-add-ons\n\nExamples:\n\n  Upgrade an add-on by service name:\n\n  $ heroku addons:upgrade heroku-redis:premium-2\n\n  Upgrade a specific add-on:\n\n  $ heroku addons:upgrade swimming-briskly-123 heroku-redis:premium-2",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": false,
            "hidden": false
          },
          {
            "name": "plan",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "addons",
        "command": "downgrade",
        "plugin": "heroku-cli-addons",
        "usage": "",
        "description": "change add-on plan",
        "default": false,
        "help": "See available plans with `heroku addons:plans SERVICE`.\n\nNote that `heroku addons:upgrade` and `heroku addons:downgrade` are the same.\nEither one can be used to change an add-on plan up or down.\n\nhttps://devcenter.heroku.com/articles/managing-add-ons\n\nExamples:\n\n  Upgrade an add-on by service name:\n\n  $ heroku addons:upgrade heroku-redis:premium-2\n\n  Upgrade a specific add-on:\n\n  $ heroku addons:upgrade swimming-briskly-123 heroku-redis:premium-2",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": false,
            "hidden": false
          },
          {
            "name": "plan",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "addons",
        "command": "wait",
        "plugin": "heroku-cli-addons",
        "usage": "addons:wait ADDON",
        "description": "Show provisioning status of the add-ons on the app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "addon",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "wait-interval",
            "char": "",
            "description": "how frequently to poll in seconds",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:25.015309111Z"
  },
  {
    "name": "heroku-fork",
    "tag": "4.1.14",
    "version": "4.1.14",
    "topics": null,
    "topic": null,
    "commands": [
      {
        "topic": "fork",
        "plugin": "heroku-fork",
        "usage": "",
        "description": "fork an existing app into a new one",
        "default": false,
        "help": "Copy config vars and Heroku Postgres data, and re-provision add-ons to a new app.\nNew app name should not be an existing app. The new app will be created as part of the forking process.\n\nExample:\n\n  $ heroku fork --from my-production-app --to my-development-app",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "NEWNAME",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "region",
            "char": "",
            "description": "specify a region",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "skip-pg",
            "char": "",
            "description": "skip postgres databases",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "from",
            "char": "",
            "description": "app to fork from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "to",
            "char": "",
            "description": "app to create",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "app",
            "char": "a",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "fork",
        "plugin": "heroku-fork",
        "usage": "",
        "description": "fork an existing app into a new one",
        "default": false,
        "help": "Copy config vars and Heroku Postgres data, and re-provision add-ons to a new app.\nNew app name should not be an existing app. The new app will be created as part of the forking process.\n\nExample:\n\n  $ heroku fork --from my-production-app --to my-development-app",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "NEWNAME",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "region",
            "char": "",
            "description": "specify a region",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "skip-pg",
            "char": "",
            "description": "skip postgres databases",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "from",
            "char": "",
            "description": "app to fork from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "to",
            "char": "",
            "description": "app to create",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "app",
            "char": "a",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:25.63679604Z"
  },
  {
    "name": "heroku-orgs",
    "tag": "1.5.5",
    "version": "1.5.5",
    "topics": [
      {
        "name": "access",
        "description": "manage user access to apps",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "orgs",
        "description": "manage organizations",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "members",
        "description": "manage organization members",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "teams",
        "description": "manage teams",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "sharing",
        "description": "",
        "hidden": true,
        "Commands": null
      },
      {
        "name": "join",
        "description": "",
        "hidden": true,
        "Commands": null
      },
      {
        "name": "leave",
        "description": "",
        "hidden": true,
        "Commands": null
      },
      {
        "name": "lock",
        "description": "",
        "hidden": true,
        "Commands": null
      },
      {
        "name": "unlock",
        "description": "",
        "hidden": true,
        "Commands": null
      }
    ],
    "topic": null,
    "commands": [
      {
        "topic": "access",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "list who has access to an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "sharing",
        "command": "access",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "access",
        "command": "add",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "Add new users to your app",
        "default": false,
        "help": "heroku access:add user@email.com --app APP # Add a collaborator to your app\n\nheroku access:add user@email.com --app APP --permissions deploy,manage,operate # permissions must be comma separated",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "email",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "permissions",
            "char": "",
            "description": "list of permissions comma separated",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "privileges",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "sharing",
        "command": "add",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "access",
        "command": "remove",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "Remove users from your app",
        "default": false,
        "help": "heroku access:remove user@email.com --app APP",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "email",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "sharing",
        "command": "remove",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "access",
        "command": "update",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "Update existing collaborators in an org app",
        "default": false,
        "help": "heroku access:update user@email.com --app APP --privileges deploy,manage,operate",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "email",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "permissions",
            "char": "",
            "description": "comma-delimited list of permissions to update (deploy,manage,operate)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "privileges",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "join",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "add yourself to an organization app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "join",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "add yourself to an organization app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "apps",
        "command": "transfer",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "transfer applications to another user, organization or team",
        "default": false,
        "help": "Examples:\n\n  $ heroku apps:transfer collaborator@example.com\n  Transferring example to collaborator@example.com... done\n\n  $ heroku apps:transfer acme-widgets\n  Transferring example to acme-widgets... done\n\n  $ heroku apps:transfer --bulk acme-widgets\n  ...",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "recipient",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "locked",
            "char": "l",
            "description": "lock the app upon transfer",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "bulk",
            "char": "",
            "description": "transfer applications in bulk",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "members",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "list members of an organization or a team",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "role",
            "char": "r",
            "description": "filter by role",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "pending",
            "char": "",
            "description": "filter by pending team invitations",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "team",
            "char": "t",
            "description": "team to use",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "members",
        "command": "add",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "adds a user to an organization or a team",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "email",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "role",
            "char": "r",
            "description": "member role (admin, collaborator, member, owner)",
            "hasValue": true,
            "hidden": false,
            "required": true
          },
          {
            "name": "team",
            "char": "t",
            "description": "team to use",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "members",
        "command": "set",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "sets a members role in an organization or a team",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "email",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "role",
            "char": "r",
            "description": "member role (admin, collaborator, member, owner)",
            "hasValue": true,
            "hidden": false,
            "required": true
          },
          {
            "name": "team",
            "char": "t",
            "description": "team to use",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "members",
        "command": "remove",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "removes a user from an organization or a team",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "email",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "team",
            "char": "t",
            "description": "team to use",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "orgs",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "list the organizations that you are a member of",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "enterprise",
            "char": "",
            "description": "filter by enterprise orgs",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "teams",
            "char": "",
            "description": "filter by teams",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "orgs",
        "command": "default",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "orgs",
        "command": "open",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "open the organization interface in a browser window",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": true,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "teams",
        "plugin": "heroku-orgs",
        "usage": "",
        "description": "list the teams that you are a member of",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:24.240158351Z"
  },
  {
    "name": "heroku-redis",
    "tag": "1.2.8",
    "version": "1.2.8",
    "topics": null,
    "topic": {
      "name": "redis",
      "description": "manage heroku redis instances",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "redis",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "gets information about redis",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "redis",
        "command": "cli",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "opens a redis prompt",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "redis",
        "command": "info",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "gets information about redis",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "redis",
        "command": "wait",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "wait for Redis instance to be available",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "redis",
        "command": "credentials",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "display credentials information",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "reset",
            "char": "",
            "description": "reset credentials",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "redis",
        "command": "promote",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "sets DATABASE as your REDIS_URL",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "redis",
        "command": "timeout",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "set the number of seconds to wait before killing idle connections",
        "default": false,
        "help": "Sets the number of seconds to wait before killing idle connections. A value of zero means that connections will not be closed.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "seconds",
            "char": "s",
            "description": "set timeout value",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "redis",
        "command": "maxmemory",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "set the key eviction policy",
        "default": false,
        "help": "Set the key eviction policy when instance reaches its storage limit. Available policies for key eviction include:\n\n    noeviction      # returns errors when memory limit is reached\n    allkeys-lru     # removes less recently used keys first\n    volatile-lru    # removes less recently used keys first that have an expiry set\n    allkeys-random  # evicts random keys\n    volatile-random # evicts random keys but only those that have an expiry set\n    volatile-ttl    # only evicts keys with an expiry set and a short TTL",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "policy",
            "char": "p",
            "description": "set policy name",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "redis",
        "command": "maintenance",
        "plugin": "heroku-redis",
        "usage": "",
        "description": "manage maintenance windows",
        "default": false,
        "help": "Set or change the maintenance window for your Redis instance",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "window",
            "char": "w",
            "description": "set weekly UTC maintenance window",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "run",
            "char": "",
            "description": "start maintenance",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "force",
            "char": "f",
            "description": "start maintenance without entering application maintenance mode",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:23.49623439Z"
  },
  {
    "name": "heroku-status",
    "tag": "3.0.5",
    "version": "3.0.5",
    "topics": null,
    "topic": {
      "name": "status",
      "description": "status of the Heroku platform",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "status",
        "plugin": "heroku-status",
        "usage": "",
        "description": "display current status of Heroku platform",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:24.880398991Z"
  },
  {
    "name": "heroku-apps",
    "tag": "2.1.23",
    "version": "2.1.23",
    "topics": [
      {
        "name": "apps",
        "description": "manage apps",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "buildpacks",
        "description": "manage the buildpacks for an app",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "config",
        "description": "manage app config vars",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "domains",
        "description": "manage the domains for an app",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "drains",
        "description": "list all log drains",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "dyno",
        "description": "",
        "hidden": true,
        "Commands": null
      },
      {
        "name": "features",
        "description": "manage optional features",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "labs",
        "description": "experimental features",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "maintenance",
        "description": "manage maintenance mode for an app",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "notifications",
        "description": "display notifications",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "ps",
        "description": "manage dynos (dynos, workers)",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "regions",
        "description": "list available regions",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "releases",
        "description": "manage app releases",
        "hidden": false,
        "Commands": null
      }
    ],
    "topic": null,
    "commands": [
      {
        "topic": "apps",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list your apps",
        "default": false,
        "help": "Example:\n\n $ heroku apps\n === My Apps\n example\n example2\n\n === Collaborated Apps\n theirapp   other@owner.name",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "all",
            "char": "A",
            "description": "include apps in all organizations",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "s",
            "description": "filter by space",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "personal",
            "char": "p",
            "description": "list apps in personal account when a default org is set",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "list",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list your apps",
        "default": false,
        "help": "Example:\n\n $ heroku apps\n === My Apps\n example\n example2\n\n === Collaborated Apps\n theirapp   other@owner.name",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "all",
            "char": "A",
            "description": "include apps in all organizations",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "s",
            "description": "filter by space",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "personal",
            "char": "p",
            "description": "list apps in personal account when a default org is set",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "list",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list your apps",
        "default": false,
        "help": "Example:\n\n $ heroku apps\n === My Apps\n example\n example2\n\n === Collaborated Apps\n theirapp   other@owner.name",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "all",
            "char": "A",
            "description": "include apps in all organizations",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "s",
            "description": "filter by space",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "personal",
            "char": "p",
            "description": "list apps in personal account when a default org is set",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "create",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "create a new app",
        "default": false,
        "help": "Examples:\n\n $ heroku apps:create\n Creating app... done, stack is cedar-14\n https://floating-dragon-42.heroku.com/ | https://git.heroku.com/floating-dragon-42.git\n\n # or just\n $ heroku create\n\n # specify a buildpack\n $ heroku apps:create --buildpack https://github.com/some/buildpack.git\n\n # specify a name\n $ heroku apps:create example\n\n # create a staging app\n $ heroku apps:create example-staging --remote staging\n\n # create an app in the eu region\n $ heroku apps:create --region eu",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "app",
            "char": "a",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "addons",
            "char": "",
            "description": "comma-delimited list of addons to install",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "buildpack",
            "char": "b",
            "description": "buildpack url to use for this app",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "no-remote",
            "char": "n",
            "description": "do not create a git remote",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "remote",
            "char": "r",
            "description": "the git remote to create, default \"heroku\"",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "stack",
            "char": "s",
            "description": "the stack to create the app on",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "",
            "description": "the private space to create the app in",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "region",
            "char": "",
            "description": "specify region for the app to run in",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "ssh-git",
            "char": "",
            "description": "use SSH git protocol for local git remote",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "kernel",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "locked",
            "char": "",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "create",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "create a new app",
        "default": false,
        "help": "Examples:\n\n $ heroku apps:create\n Creating app... done, stack is cedar-14\n https://floating-dragon-42.heroku.com/ | https://git.heroku.com/floating-dragon-42.git\n\n # or just\n $ heroku create\n\n # specify a buildpack\n $ heroku apps:create --buildpack https://github.com/some/buildpack.git\n\n # specify a name\n $ heroku apps:create example\n\n # create a staging app\n $ heroku apps:create example-staging --remote staging\n\n # create an app in the eu region\n $ heroku apps:create --region eu",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "app",
            "char": "a",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "addons",
            "char": "",
            "description": "comma-delimited list of addons to install",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "buildpack",
            "char": "b",
            "description": "buildpack url to use for this app",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "no-remote",
            "char": "n",
            "description": "do not create a git remote",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "remote",
            "char": "r",
            "description": "the git remote to create, default \"heroku\"",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "stack",
            "char": "s",
            "description": "the stack to create the app on",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "",
            "description": "the private space to create the app in",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "region",
            "char": "",
            "description": "specify region for the app to run in",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "ssh-git",
            "char": "",
            "description": "use SSH git protocol for local git remote",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "kernel",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "locked",
            "char": "",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "destroy",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "permanently destroy an app",
        "default": false,
        "help": "This will also destroy all add-ons on the app.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "destroy",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "permanently destroy an app",
        "default": false,
        "help": "This will also destroy all add-ons on the app.",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "delete",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "permanently destroy an app",
        "default": false,
        "help": "This will also destroy all add-ons on the app.",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "errors",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "view app errors",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "hours",
            "char": "",
            "description": "number of hours to look back (default 24)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "router",
            "char": "",
            "description": "show only router errors",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "dyno",
            "char": "",
            "description": "show only dyno errors",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "favorites",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list favorited apps",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "favorites:add",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "favorites an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "apps",
        "command": "favorites:remove",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "unfavorites an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "apps",
        "command": "info",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "show detailed app information",
        "default": false,
        "help": "Examples:\n\n $ heroku apps:info\n === example\n Git URL:   https://git.heroku.com/example.git\n Repo Size: 5M\n ...\n\n $ heroku apps:info --shell\n git_url=https://git.heroku.com/example.git\n repo_size=5000000\n ...",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "shell",
            "char": "s",
            "description": "output more shell friendly key/value pairs",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "extended",
            "char": "x",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          },
          {
            "name": "json",
            "char": "j",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "info",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "show detailed app information",
        "default": false,
        "help": "Examples:\n\n $ heroku apps:info\n === example\n Git URL:   https://git.heroku.com/example.git\n Repo Size: 5M\n ...\n\n $ heroku apps:info --shell\n git_url=https://git.heroku.com/example.git\n repo_size=5000000\n ...",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "app",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "shell",
            "char": "s",
            "description": "output more shell friendly key/value pairs",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "extended",
            "char": "x",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          },
          {
            "name": "json",
            "char": "j",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "open",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "open the app in a web browser",
        "default": false,
        "help": "Examples:\n\n  $ heroku open -a myapp\n  # opens https://myapp.herokuapp.com\n\n  $ heroku open -a myapp /foo\n  # opens https://myapp.herokuapp.com/foo",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "path",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "open",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "open the app in a web browser",
        "default": false,
        "help": "Examples:\n\n  $ heroku open -a myapp\n  # opens https://myapp.herokuapp.com\n\n  $ heroku open -a myapp /foo\n  # opens https://myapp.herokuapp.com/foo",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "path",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "apps",
        "command": "rename",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "rename an app",
        "default": false,
        "help": "This will locally update the git remote if it is set to the old app.\n\nExample:\n\n  $ heroku apps:rename --app oldname newname\n  https://newname.herokuapp.com/ | https://git.heroku.com/newname.git\n  Git remote heroku updated",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "newname",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "ssh-git",
            "char": "",
            "description": "use ssh git protocol instead of https",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "rename",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "rename an app",
        "default": false,
        "help": "This will locally update the git remote if it is set to the old app.\n\nExample:\n\n  $ heroku apps:rename --app oldname newname\n  https://newname.herokuapp.com/ | https://git.heroku.com/newname.git\n  Git remote heroku updated",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "newname",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "ssh-git",
            "char": "",
            "description": "use ssh git protocol instead of https",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "apps",
        "command": "stacks",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "show the list of available stacks",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "stack",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "show the list of available stacks",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "stack",
        "command": "set",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "set the stack of an app",
        "default": false,
        "help": "Example:\n\n  $ heroku stack:set cedar-14 -a myapp\n  Stack set. Next release on myapp will use cedar-14.\n  Run git push heroku master to create a new release on myapp.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "stack",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "stack",
        "command": "set",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "set the stack of an app",
        "default": false,
        "help": "Example:\n\n  $ heroku stack:set cedar-14 -a myapp\n  Stack set. Next release on myapp will use cedar-14.\n  Run git push heroku master to create a new release on myapp.",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "stack",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "buildpacks",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display the buildpack_url(s) for an app",
        "default": false,
        "help": "Examples:\n $ heroku buildpacks",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "buildpacks",
        "command": "add",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "add new app buildpack, inserting into list of buildpacks if necessary",
        "default": false,
        "help": "Example:\n\n $ heroku buildpacks:add -i 1 https://github.com/heroku/heroku-buildpack-ruby",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "url",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "index",
            "char": "i",
            "description": "the 1-based index of the URL in the list of URLs",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "buildpacks",
        "command": "clear",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "clear all buildpacks set on the app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "buildpacks",
        "command": "remove",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "remove a buildpack set on the app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "url",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "index",
            "char": "i",
            "description": "the 1-based index of the URL to remove from the list of URLs",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "buildpacks",
        "command": "set",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "set new app buildpack, overwriting into list of buildpacks if necessary",
        "default": false,
        "help": "Example:\n\n $ heroku buildpacks:set -i 1 https://github.com/heroku/heroku-buildpack-ruby",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "url",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "index",
            "char": "i",
            "description": "the 1-based index of the URL in the list of URLs",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "config",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display the config vars for an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "shell",
            "char": "s",
            "description": "output config vars in shell format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output config vars in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "config",
        "command": "get",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display a config value for an app",
        "default": false,
        "help": "Example:\n\n $ heroku config:get RAILS_ENV\n production",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "key",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "shell",
            "char": "s",
            "description": "output config var in shell format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "config",
        "command": "set",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "set one or more config vars",
        "default": false,
        "help": "Examples:\n\n $ heroku config:set RAILS_ENV=staging\n Setting config vars and restarting example... done, v10\n RAILS_ENV: staging\n\n $ heroku config:set RAILS_ENV=staging RACK_ENV=staging\n Setting config vars and restarting example... done, v11\n RAILS_ENV: staging\n RACK_ENV:  staging",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "config",
        "command": "add",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "set one or more config vars",
        "default": false,
        "help": "Examples:\n\n $ heroku config:set RAILS_ENV=staging\n Setting config vars and restarting example... done, v10\n RAILS_ENV: staging\n\n $ heroku config:set RAILS_ENV=staging RACK_ENV=staging\n Setting config vars and restarting example... done, v11\n RAILS_ENV: staging\n RACK_ENV:  staging",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "config",
        "command": "unset",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "unset one or more config vars",
        "default": false,
        "help": "Examples:\n\n $ heroku config:unset RAILS_ENV\n Unsetting RAILS_ENV and restarting example... done, v10\n\n $ heroku config:unset RAILS_ENV RACK_ENV\n Unsetting RAILS_ENV, RACK_ENV and restarting example... done, v10",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "config",
        "command": "remove",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "unset one or more config vars",
        "default": false,
        "help": "Examples:\n\n $ heroku config:unset RAILS_ENV\n Unsetting RAILS_ENV and restarting example... done, v10\n\n $ heroku config:unset RAILS_ENV RACK_ENV\n Unsetting RAILS_ENV, RACK_ENV and restarting example... done, v10",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "dashboard",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display information about favorite apps",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "domains",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list domains for an app",
        "default": false,
        "help": "Example:\n\n  $ heroku domains\n  === example Heroku Domain\n  example.herokuapp.com\n\n  === example Custom Domains\n  Domain Name  DNS Target\n  ───────────  ─────────────────────\n  example.com  example.herokuapp.com",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "domains",
        "command": "add",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "add domain to an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "hostname",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "wait",
            "char": "",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "domains",
        "command": "clear",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "remove all domains from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "domains",
        "command": "remove",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "remove domain from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "hostname",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "domains",
        "command": "wait",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "wait for domain to be active for an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "hostname",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "drains",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display the log drains of an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "extended",
            "char": "x",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "drains",
        "command": "add",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "adds a log drain to an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "url",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "drains",
        "command": "remove",
        "plugin": "heroku-apps",
        "usage": "drains:remove [URL|TOKEN]",
        "description": "removes a log drain from an app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "url",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "features",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list available app features",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "features",
        "command": "disable",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "disables an app feature",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "feature",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "features",
        "command": "enable",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "enables an app feature",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "feature",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "features",
        "command": "info",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display information about a feature",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "feature",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "keys",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display your SSH keys",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "long",
            "char": "l",
            "description": "display full SSH keys",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "keys",
        "command": "add",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "add an SSH key for a user",
        "default": false,
        "help": "if no KEY is specified, will try to find ~/.ssh/id_rsa.pub\n\nExamples:\n\n  $ heroku keys:add\n  Could not find an existing public key.\n  Would you like to generate one? [Yn] y\n  Generating new SSH public key.\n  Uploading SSH public key /.ssh/id_rsa.pub... done\n\n  $ heroku keys:add /my/key.pub\n  Uploading SSH public key /my/key.pub... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "key",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "quiet",
            "char": "",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          },
          {
            "name": "yes",
            "char": "y",
            "description": "automatically answer yes for all prompts",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "keys",
        "command": "clear",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "remove all SSH keys for current user",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "keys",
        "command": "remove",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "remove an SSH key from the user",
        "default": false,
        "help": "Example:\n\n  $ heroku keys:remove email@example.com\n  Removing email@example.com SSH key... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "key",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "labs",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list experimental features",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "display as json",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "labs",
        "command": "disable",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "disables an experimental feature",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "feature",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "labs",
        "command": "enable",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "enables an experimental feature",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "feature",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "labs",
        "command": "info",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "show feature info",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "feature",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "display as json",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "maintenance",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display the current maintenance status of app",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "maintenance",
        "command": "off",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "take the app out of maintenance mode",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "maintenance",
        "command": "on",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "put the app into maintenance mode",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "notifications",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display notifications",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": true,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "all",
            "char": "",
            "description": "view all notifications (not just the ones for the current app)",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "read",
            "char": "",
            "description": "show notifications already read",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "ps",
        "plugin": "heroku-apps",
        "usage": "ps [TYPE [TYPE ...]]",
        "description": "list dynos for an app",
        "default": false,
        "help": "Examples:\n\n $ heroku ps\n === run: one-off dyno\n run.1: up for 5m: bash\n\n === web: bundle exec thin start -p $PORT\n web.1: created for 30s\n\n $ heroku ps run # specifying types\n === run: one-off dyno\n run.1: up for 5m: bash",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "display as json",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "extended",
            "char": "x",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "ps",
        "command": "restart",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "restart app dynos",
        "default": false,
        "help": "if DYNO is not specified, restarts all dynos on app\n\nExamples:\n\n  $ heroku ps:restart web.1\n  Restarting web.1 dyno... done\n\n  $ heroku ps:restart web\n  Restarting web dynos... done\n\n  $ heroku ps:restart\n  Restarting dynos... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "dyno",
        "command": "restart",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "restart app dynos",
        "default": false,
        "help": "if DYNO is not specified, restarts all dynos on app\n\nExamples:\n\n  $ heroku ps:restart web.1\n  Restarting web.1 dyno... done\n\n  $ heroku ps:restart web\n  Restarting web dynos... done\n\n  $ heroku ps:restart\n  Restarting dynos... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "restart",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "restart app dynos",
        "default": false,
        "help": "if DYNO is not specified, restarts all dynos on app\n\nExamples:\n\n  $ heroku ps:restart web.1\n  Restarting web.1 dyno... done\n\n  $ heroku ps:restart web\n  Restarting web dynos... done\n\n  $ heroku ps:restart\n  Restarting dynos... done",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "ps",
        "command": "scale",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "scale dyno quantity up or down",
        "default": false,
        "help": "Appending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\nOmitting any arguments will display the app's current dyno formation, in a\nformat suitable for passing back into ps:scale.\n\nExamples:\n\n  $ heroku ps:scale web=3:Standard-2X worker+1\n  Scaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n\n  $ heroku ps:scale\n  web=3:Standard-2X worker=1:Standard-1X",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "dyno",
        "command": "scale",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "scale dyno quantity up or down",
        "default": false,
        "help": "Appending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\nOmitting any arguments will display the app's current dyno formation, in a\nformat suitable for passing back into ps:scale.\n\nExamples:\n\n  $ heroku ps:scale web=3:Standard-2X worker+1\n  Scaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n\n  $ heroku ps:scale\n  web=3:Standard-2X worker=1:Standard-1X",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "scale",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "scale dyno quantity up or down",
        "default": false,
        "help": "Appending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\nOmitting any arguments will display the app's current dyno formation, in a\nformat suitable for passing back into ps:scale.\n\nExamples:\n\n  $ heroku ps:scale web=3:Standard-2X worker+1\n  Scaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n\n  $ heroku ps:scale\n  web=3:Standard-2X worker=1:Standard-1X",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "ps",
        "command": "stop",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "stop app dyno",
        "default": false,
        "help": "stop app dyno or dyno type\n\nExamples:\n\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "dyno",
        "command": "stop",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "stop app dyno",
        "default": false,
        "help": "stop app dyno or dyno type\n\nExamples:\n\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "ps",
        "command": "kill",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "stop app dyno",
        "default": false,
        "help": "stop app dyno or dyno type\n\nExamples:\n\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "dyno",
        "command": "kill",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "stop app dyno",
        "default": false,
        "help": "stop app dyno or dyno type\n\nExamples:\n\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "stop",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "stop app dyno",
        "default": false,
        "help": "stop app dyno or dyno type\n\nExamples:\n\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "kill",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "stop app dyno",
        "default": false,
        "help": "stop app dyno or dyno type\n\nExamples:\n\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "dyno",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "ps",
        "command": "type",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "manage dyno sizes",
        "default": false,
        "help": "Called with no arguments shows the current dyno size.\n\nCalled with one argument sets the size.\nWhere SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\nCalled with 1..n TYPE=SIZE arguments sets the quantity per type.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "ps",
        "command": "resize",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "manage dyno sizes",
        "default": false,
        "help": "Called with no arguments shows the current dyno size.\n\nCalled with one argument sets the size.\nWhere SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\nCalled with 1..n TYPE=SIZE arguments sets the quantity per type.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "resize",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "manage dyno sizes",
        "default": false,
        "help": "Called with no arguments shows the current dyno size.\n\nCalled with one argument sets the size.\nWhere SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\nCalled with 1..n TYPE=SIZE arguments sets the quantity per type.",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "dyno",
        "command": "type",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "manage dyno sizes",
        "default": false,
        "help": "Called with no arguments shows the current dyno size.\n\nCalled with one argument sets the size.\nWhere SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\nCalled with 1..n TYPE=SIZE arguments sets the quantity per type.",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "dyno",
        "command": "resize",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "manage dyno sizes",
        "default": false,
        "help": "Called with no arguments shows the current dyno size.\n\nCalled with one argument sets the size.\nWhere SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\nCalled with 1..n TYPE=SIZE arguments sets the quantity per type.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "regions",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "list available regions for deployment",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "private",
            "char": "",
            "description": "show regions for private spaces",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "common",
            "char": "",
            "description": "show regions for common runtime",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "releases",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "display the releases for an app",
        "default": false,
        "help": "Example:\n\n $ heroku releases\n === example Releases\n v1 Config add FOO_BAR email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n v2 Config add BAR_BAZ email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n v3 Config add BAZ_QUX email@example.com 2015/11/17 17:37:41 (~ 1h ago)",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "num",
            "char": "n",
            "description": "number of releases to show",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output releases in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "extended",
            "char": "x",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "releases",
        "command": "info",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "view detailed information for a release",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "release",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "shell",
            "char": "s",
            "description": "output in shell format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "releases",
        "command": "rollback",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "rollback to a previous release",
        "default": false,
        "help": "If RELEASE is not specified, it will rollback one release",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "release",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "rollback",
        "plugin": "heroku-apps",
        "usage": "",
        "description": "rollback to a previous release",
        "default": false,
        "help": "If RELEASE is not specified, it will rollback one release",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "release",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      }
    ],
    "updated_at": "2017-02-15T20:52:25.304821001Z"
  },
  {
    "name": "heroku-local",
    "tag": "5.1.8",
    "version": "5.1.8",
    "topics": null,
    "topic": {
      "name": "local",
      "description": "run heroku app locally",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "local",
        "command": "start",
        "plugin": "heroku-local",
        "usage": "",
        "description": "run heroku app locally",
        "default": true,
        "help": "Start the application specified by a Procfile (defaults to ./Procfile)\n\nExamples:\n\n  heroku local\n  heroku local web\n  heroku local web=2\n  heroku local web=1,worker=2",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "processname",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "procfile",
            "char": "f",
            "description": "use a different Procfile",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "env",
            "char": "e",
            "description": "location of env file (defaults to .env)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "port",
            "char": "p",
            "description": "port to listen on",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "restart",
            "char": "r",
            "description": "restart process if it dies",
            "hasValue": false,
            "hidden": true,
            "required": false
          },
          {
            "name": "concurrency",
            "char": "c",
            "description": "number of processes to start",
            "hasValue": true,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "local",
        "command": "run",
        "plugin": "heroku-local",
        "usage": "",
        "description": "run a one-off command",
        "default": false,
        "help": "Example:\n\n  heroku local:run bin/migrate",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "env",
            "char": "e",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "port",
            "char": "p",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "local",
        "command": "version",
        "plugin": "heroku-local",
        "usage": "",
        "description": "display node-foreman version",
        "default": false,
        "help": "Display node-foreman version",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": false,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      }
    ],
    "updated_at": "2017-02-15T20:52:25.138506477Z"
  },
  {
    "name": "heroku-pg",
    "tag": "2.0.16",
    "version": "2.0.16",
    "topics": [
      {
        "name": "pg",
        "description": "manage postgresql databases",
        "hidden": false,
        "Commands": null
      }
    ],
    "topic": null,
    "commands": [
      {
        "topic": "pg",
        "command": "backups",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "list database backups",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "verbose",
            "char": "v",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          },
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "output",
            "char": "o",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "wait-interval",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "at",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "quiet",
            "char": "q",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:cancel",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "cancel an in-progress backup or restore (default newest)",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "backups:capture",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "capture a new backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "wait-interval",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "verbose",
            "char": "v",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:delete",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "delete a backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:download",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "downloads database backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "output",
            "char": "o",
            "description": "location to download to. Defaults to latest.dump",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:info",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "get information about a specific backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "backups:restore",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "restore a backup (default latest) to a database",
        "default": false,
        "help": "defaults to saving the latest database to DATABASE_URL",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup",
            "optional": true,
            "hidden": false
          },
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "wait-interval",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "verbose",
            "char": "v",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:schedule",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "schedule daily backups for given database",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "at",
            "char": "",
            "description": "at a specific (24h) hour in the given timezone. Defaults to UTC. --at '[HOUR]:00 [TIMEZONE]'",
            "hasValue": true,
            "hidden": false,
            "required": true
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:schedules",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "list backup schedule",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "pg",
        "command": "backups:unschedule",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "stop daily backups",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "backups:url",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "get secret but publicly accessible URL of a backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "quiet",
            "char": "q",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:public-url",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "get secret but publicly accessible URL of a backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "quiet",
            "char": "q",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "backups:publicurl",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "get secret but publicly accessible URL of a backup",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "backup_id",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "quiet",
            "char": "q",
            "description": "",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "copy",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "copy all data from source db to target",
        "default": false,
        "help": "at least one of the databases must be a Heroku PostgreSQL DB",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "source",
            "optional": false,
            "hidden": false
          },
          {
            "name": "target",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "wait-interval",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "verbose",
            "char": "",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "credentials",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "manage the database credentials",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "reset",
            "char": "",
            "description": "reset database credentials",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "diagnose",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "run or view diagnostics report",
        "default": false,
        "help": "defaults to DATABASE_URL database if no DATABASE is specified\nif REPORT_ID is specified instead, a previous report is displayed",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "DATABASE|REPORT_ID",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "show database information",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "info",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "show database information",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "kill",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "kill a query",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pid",
            "optional": false,
            "hidden": false
          },
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "force",
            "char": "f",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "killall",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "terminates all connections",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "links",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "lists all datbases and information on link",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "links:create",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "create a link between data stores",
        "default": false,
        "help": "Example:\n  heroku pg:links:create HEROKU_REDIS_RED HEROKU_POSTGRESQL_CERULEAN",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "remote",
            "optional": false,
            "hidden": false
          },
          {
            "name": "database",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "as",
            "char": "",
            "description": "name of link to create",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "links:destroy",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "destroys a link between data stores",
        "default": false,
        "help": "Example:\n  heroku pg:links:destroy HEROKU_POSTGRESQL_CERULEAN redis-symmetrical-100",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": false,
            "hidden": false
          },
          {
            "name": "link",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "maintenance",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "show current maintenance information",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "maintenance:run",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "start maintenance",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "force",
            "char": "f",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "maintenance:window",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "set weekly maintenance window",
        "default": false,
        "help": "All times are in UTC.\n\nExample:\n  heroku pg:maintenance:window postgres-slippery-100 \"Sunday 06:00\"",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": false,
            "hidden": false
          },
          {
            "name": "window",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "promote",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "sets DATABASE as your DATABASE_URL",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "ps",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "view active queries with execution time",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "verbose",
            "char": "v",
            "description": "",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "psql",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "open a psql shell to the database",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "command",
            "char": "c",
            "description": "SQL command to run",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "psql",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "open a psql shell to the database",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "command",
            "char": "c",
            "description": "SQL command to run",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "push",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "push local or remote into Heroku database",
        "default": false,
        "help": "Push from SOURCE into TARGET. TARGET must not already exist.\n\nTo empty a Heroku database for import run 'heroku pg:reset'\n\nSOURCE must be either the name of a database existing on your localhost or the\nfully qualified URL of a remote database.\n\nExamples:\n\n  # push mylocaldb into a Heroku DB named postgresql-swimmingly-100\n  $ heroku pg:push mylocaldb postgresql-swimmingly-100\n\n  # push remote DB at postgres://myhost/mydb into a Heroku DB named postgresql-swimmingly-100\n  $ heroku pg:push postgres://myhost/mydb postgresql-swimmingly-100",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "source",
            "optional": false,
            "hidden": false
          },
          {
            "name": "target",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "pull",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "pull Heroku database into local or remote database",
        "default": false,
        "help": "Pull from SOURCE into TARGET. TARGET must not already exist.\n\nTo delete a local database run `dropdb TARGET`\n\nTARGET will be created locally if it's a database name or remotely if it's a fully qualified URL.\n\nExamples:\n\n  # pull Heroku DB named postgresql-swimmingly-100 into local DB mylocaldb\n  $ heroku pg:pull postgresql-swimmingly-100 mylocaldb --app sushi\n\n  # pull Heroku DB named postgresql-swimmingly-100 into remote DB at postgres://myhost/mydb\n  $ heroku pg:pull postgresql-swimmingly-100 postgres://myhost/mydb --app sushi",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "source",
            "optional": false,
            "hidden": false
          },
          {
            "name": "target",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pg",
        "command": "reset",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "delete all data in DATABASE",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "unfollow",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "stop a replica from following and make it a writeable database",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "upgrade",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "unfollow a database and upgrade it to the latest stable PostgreSQL version",
        "default": false,
        "help": "to upgrade to another PostgreSQL version, use pg:copy instead",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "confirm",
            "char": "c",
            "description": "",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pg",
        "command": "wait",
        "plugin": "heroku-pg",
        "usage": "",
        "description": "blocks until database is available",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "database",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "wait-interval",
            "char": "",
            "description": "how frequently to poll in seconds (to avoid rate limiting)",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:23.194381711Z"
  },
  {
    "name": "heroku-pipelines",
    "tag": "1.3.1",
    "version": "1.3.1",
    "topics": null,
    "topic": {
      "name": "pipelines",
      "description": "manage collections of apps in pipelines",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "pipelines",
        "command": "add",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "add this app to a pipeline",
        "default": false,
        "help": "The app and pipeline names must be specified.\nThe stage of the app will be guessed based on its name if not specified.\n\nExample:\n  $ heroku pipelines:add example -a example-admin -s production\n  Adding example-admin to example pipeline as production... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pipeline",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "stage",
            "char": "s",
            "description": "stage of first app in pipeline",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pipelines",
        "command": "create",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "create a new pipeline",
        "default": false,
        "help": "An existing app must be specified as the first app in the pipeline.\nThe pipeline name will be inferred from the app name if not specified.\nThe stage of the app will be guessed based on its name if not specified.\n\nExample:\n  $ heroku pipelines:create -a example-staging\n  ? Pipeline name: example\n  ? Stage of example-staging: staging\n  Creating example pipeline... done\n  Adding example-staging to example pipeline as staging... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "name",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "stage",
            "char": "s",
            "description": "stage of first app in pipeline",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pipelines",
        "command": "destroy",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "destroy a pipeline",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:destroy example\n  Destroying example pipeline... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pipeline",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pipelines",
        "command": "diff",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "compares the latest release of this app to its downstream app(s)",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "pipelines",
        "command": "info",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "show list of apps in a pipeline",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:info example\n  === example\n  Staging:     example-staging\n  Production:  example\n               example-admin",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pipeline",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pipelines",
        "command": "list",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "list pipelines you have access to",
        "default": true,
        "help": "Example:\n  $ heroku pipelines:list\n  === My Pipelines\n  example\n  sushi",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pipelines",
        "command": "open",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "open a pipeline in dashboard",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:open example",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pipeline",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pipelines",
        "command": "promote",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "promote the latest release of this app to its downstream app(s)",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:promote -a example-staging\n  Promoting example-staging to example (production)... done, v23\n  Promoting example-staging to example-admin (production)... done, v54\n\nExample:\n  $ heroku pipelines:promote -a example-staging --to my-production-app1,my-production-app2\n  Starting promotion to apps: my-production-app1,my-production-app2... done\n  Waiting for promotion to complete... done\n  Promotion successful\n  my-production-app1: succeeded\n  my-production-app2: succeeded",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "to",
            "char": "t",
            "description": "comma separated list of apps to promote to",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pipelines",
        "command": "remove",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "remove this app from its pipeline",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:remove -a example-admin\n  Removing example-admin... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": null
      },
      {
        "topic": "pipelines",
        "command": "rename",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "rename a pipeline",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:rename example www\n  Renaming example pipeline to www... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pipeline",
            "optional": false,
            "hidden": false
          },
          {
            "name": "name",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "pipelines",
        "command": "setup",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "bootstrap a new pipeline with common settings and create a production and staging app (requires a fully formed app.json in the repo)",
        "default": false,
        "help": "Example:\n\n  heroku pipelines:setup example githuborg/reponame -o example-org\n  ? Automatically deploy the master branch to staging? Yes\n  ? Wait for CI to pass before deploying the master branch to staging? Yes\n  ? Enable review apps? Yes\n  ? Automatically create review apps for every PR? Yes\n  ? Automatically destroy idle review apps after 5 days? Yes\n  Creating pipeline... done\n  Linking to repo... done\n  Creating ⬢ example (production app)... done\n  Creating ⬢ example-staging (staging app)... done\n  Configuring pipeline... done\n  View your new pipeline by running `heroku pipelines:open e5a55ffa-de3f-11e6-a245-3c15c2e6bc1e`",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "name",
            "optional": true,
            "hidden": false
          },
          {
            "name": "repo",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "organization",
            "char": "o",
            "description": "the organization which will own the apps (can also use --team)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "team",
            "char": "t",
            "description": "the team which will own the apps (can also use --organization)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "yes",
            "char": "y",
            "description": "accept all default settings without prompting",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "pipelines",
        "command": "update",
        "plugin": "heroku-pipelines",
        "usage": "",
        "description": "update this app's stage in a pipeline",
        "default": false,
        "help": "Example:\n  $ heroku pipelines:update -s staging -a example-admin\n  Changing example-admin to staging... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "stage",
            "char": "s",
            "description": "new stage of app",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:24.618109548Z"
  },
  {
    "name": "heroku-run",
    "tag": "3.4.3",
    "version": "3.4.3",
    "topics": [
      {
        "name": "run",
        "description": "run a one-off process inside a Heroku dyno",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "logs",
        "description": "display recent log output",
        "hidden": false,
        "Commands": null
      }
    ],
    "topic": null,
    "commands": [
      {
        "topic": "console",
        "plugin": "heroku-run",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "size",
            "char": "s",
            "description": "dyno size",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "env",
            "char": "e",
            "description": "environment variables to set (use ';' to split multiple vars)",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "run",
        "command": "detached",
        "plugin": "heroku-run",
        "usage": "",
        "description": "run a detached dyno, where output is sent to your logs",
        "default": false,
        "help": "Example:\n\n  $ heroku run:detached ls\n  Running ls on app [detached]... up, run.1\n  Run heroku logs -a app -p run.1 to view the output.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "size",
            "char": "s",
            "description": "dyno size",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "tail",
            "char": "t",
            "description": "stream logs from the dyno",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "env",
            "char": "e",
            "description": "environment variables to set (use ';' to split multiple vars)",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "run",
        "command": "inside",
        "plugin": "heroku-run",
        "usage": "",
        "description": "run a one-off process inside an existing heroku dyno",
        "default": false,
        "help": "Examples:\n\n  $ heroku run:inside web.1 bash\n  Running bash on web.1.... up\n  ~ $",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "exit-code",
            "char": "",
            "description": "passthrough the exit code of the remote command",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "env",
            "char": "",
            "description": "environment variables to set (use ';' to split multiple vars)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "listen",
            "char": "",
            "description": "listen on a local port",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "logs",
        "plugin": "heroku-run",
        "usage": "",
        "description": "display recent log output",
        "default": false,
        "help": "Example:\n\n  $ heroku logs\n  2012-01-01T12:00:00+00:00 heroku[api]: Config add EXAMPLE by email@example.com\n  2012-01-01T12:00:01+00:00 heroku[api]: Release v1 created by email@example.com",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "num",
            "char": "n",
            "description": "number of lines to display",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "ps",
            "char": "p",
            "description": "hidden alias for dyno",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "dyno",
            "char": "d",
            "description": "dyno to limit filter by",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "source",
            "char": "s",
            "description": "log source to limit filter by",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "tail",
            "char": "t",
            "description": "continually stream logs",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "force-colors",
            "char": "",
            "description": "force use of colors (even on non-tty output)",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "rake",
        "plugin": "heroku-run",
        "usage": "",
        "description": "",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "size",
            "char": "s",
            "description": "dyno size",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "exit-code",
            "char": "x",
            "description": "passthrough the exit code of the remote command",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "env",
            "char": "e",
            "description": "environment variables to set (use ';' to split multiple vars)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "no-tty",
            "char": "",
            "description": "force the command to not run in a tty",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "run",
        "plugin": "heroku-run",
        "usage": "",
        "description": "run a one-off process inside a heroku dyno",
        "default": false,
        "help": "Examples:\n\n  $ heroku run bash\n  Running bash on app.... up, run.1\n  ~ $\n\n  $ heroku run -s hobby -- myscript.sh -a arg1 -s arg2\n  Running myscript.sh -a arg1 -s arg2 on app.... up, run.1",
        "fullHelp": "",
        "hidden": false,
        "needsApp": true,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "size",
            "char": "s",
            "description": "dyno size",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "exit-code",
            "char": "x",
            "description": "passthrough the exit code of the remote command",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "env",
            "char": "e",
            "description": "environment variables to set (use ';' to split multiple vars)",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "no-tty",
            "char": "",
            "description": "force the command to not run in a tty",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "listen",
            "char": "",
            "description": "listen on a local port",
            "hasValue": false,
            "hidden": true,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:25.460159836Z"
  },
  {
    "name": "heroku-spaces",
    "tag": "2.6.0",
    "version": "2.6.0",
    "topics": [
      {
        "name": "spaces",
        "description": "manage heroku private spaces",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "trusted-ips",
        "description": "",
        "hidden": true,
        "Commands": null
      }
    ],
    "topic": null,
    "commands": [
      {
        "topic": "spaces",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "list available spaces",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": true,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "create",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "create a new space",
        "default": false,
        "help": "Example:\n  $ heroku spaces:create --space my-space --org my-org --region oregon\n  Creating space my-space in organization my-org... done\n  === my-space\n  ID:           e7b99e37-69b3-4475-ad47-a5cc5d75fd9f\n  Organization: my-org\n  Region:       oregon\n  State:        allocating\n  Created at:   2016-01-06T03:23:13Z",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": true,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "name of space to create",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "channel",
            "char": "",
            "description": "",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "region",
            "char": "",
            "description": "region name",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "features",
            "char": "",
            "description": "a list of features separated by commas",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "log-drain-url",
            "char": "",
            "description": "direct log drain url",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "owner-pool",
            "char": "",
            "description": "owner pool name",
            "hasValue": true,
            "hidden": true,
            "required": false
          },
          {
            "name": "shield",
            "char": "",
            "description": "create a Shield space",
            "hasValue": false,
            "hidden": true,
            "required": false
          },
          {
            "name": "cidr",
            "char": "",
            "description": "the RFC-1918 CIDR the space will use",
            "hasValue": true,
            "hidden": true,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "destroy",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "destroy a space",
        "default": false,
        "help": "Example:\n  $ heroku spaces:destroy --space my-space\n  Destroying my-space... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to destroy",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to space name to bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "info",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "show info about a space",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get info of",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "rename",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "renames a space",
        "default": false,
        "help": "Example:\n  $ heroku spaces:rename --from old-space-name --to new-space-name\n  Renaming space old-space-name to new-space-name... done",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "from",
            "char": "",
            "description": "current name of space",
            "hasValue": true,
            "hidden": false,
            "required": true
          },
          {
            "name": "to",
            "char": "",
            "description": "desired name of space",
            "hasValue": true,
            "hidden": false,
            "required": true
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "wait",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "wait for a space to be created",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get info of",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "interval",
            "char": "i",
            "description": "seconds to wait between poll intervals",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "timeout",
            "char": "t",
            "description": "maximum number of seconds to wait",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "peering:info",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "display the information necessary to initiate a peering connection",
        "default": false,
        "help": "Example:\n  $ heroku spaces:peering:info example-space\n  === example-space Peering Info\n  AWS Account ID:    012345678910\n  AWS Region:        us-west-2\n  AWS VPC ID:        vpc-baadf00d\n  AWS VPC CIDR:      10.0.0.0/16\n  Dyno CIDRs:        10.0.128.0/20, 10.0.144.0/20\n  Unavailable CIDRs: 10.1.0.0/16\n\nYou will use the information provied by this command to establish a peering connection request from your AWS VPC to your private space.\n\nTo start the peering process, go into your AWS console for the VPC you would like peered with your Private Space,\nnavigate to the VPC service, choose the \"Peering Connections\" option and click the \"Create peering connection\" button.\n\n- The AWS Account ID and VPC ID are necessary for the AWS VPC Peering connection wizard.\n- You will also need to configure your VPC route table to route the Dyno CIDRs through the peering connection.\n\nOnce you've established the peering connection request, you can use the spaces:peerings:accept command to accept and\nconfigure the peering connection for the space.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get peering info from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "peerings",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "list peering connections for a space",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get peer list from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "peerings:accept",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "accepts a pending peering request for a private space",
        "default": false,
        "help": "Example:\n  $ heroku spaces:peerings:accept pcx-4bd27022 --space example-space\n  Accepting and configuring peering connection pcx-4bd27022",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pcxid",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "pcxid",
            "char": "p",
            "description": "PCX ID of a pending peering",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "s",
            "description": "space to get peering info from",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "peerings:destroy",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "destroys an active peering connection in a private space",
        "default": false,
        "help": "Example:\n  $ heroku peerings:destroy pcx-4bd27022 --confirm pcx-4bd27022 --space example-space\n  Tearing down peering connection pcx-4bd27022",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "pcxid",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "pcxid",
            "char": "p",
            "description": "PCX ID of a pending peering",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "s",
            "description": "space to get peering info from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to PCX ID to bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "vpn:create",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "create VPN",
        "default": false,
        "help": "Example:\n  $ heroku spaces:vpn:create --ip 35.161.69.30 --cidrs 172.16.0.0/16,10.0.0.0/24 --space my-space\n  Creating VPN in space my-space... done\n  ▸    Use spaces:vpn:wait to track allocation.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "ip",
            "char": "i",
            "description": "public IP of customer gateway",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "cidrs",
            "char": "c",
            "description": "a list of routable CIDRs separated by commas",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "space",
            "char": "s",
            "description": "space name",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "vpn:info",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "display the information for VPN",
        "default": false,
        "help": "Example:\n  $ heroku spaces:vpn:info my-space\n  === my-space VPN Info\n  ID:             123456789012\n  Public IP:      35.161.69.30\n  Routable CIDRs: 172.16.0.0/16\n  State:          available\n  === my-space Tunnel Info\n  VPN Tunnel  IP Address     Status  Status Last Changed   Details\n  ──────────  ─────────────  ──────  ────────────────────  ──────────────\n  Tunnel 1    52.44.146.197  UP      2016-10-25T22:09:05Z  status message\n  Tunnel 2    52.44.146.197  UP      2016-10-25T22:09:05Z  status message",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get VPN info from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "vpn:config",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "display the configuration information for VPN",
        "default": false,
        "help": "Example:\n  $ heroku spaces:vpn:config my-space",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get VPN config from",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "vpn:wait",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "wait for VPN to be created",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to wait for VPN from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "interval",
            "char": "i",
            "description": "seconds to wait between poll intervals",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "timeout",
            "char": "t",
            "description": "maximum number of seconds to wait",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "spaces",
        "command": "vpn:destroy",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "destroys VPN in a private space",
        "default": false,
        "help": "Example:\n  $ heroku spaces:vpn:destroy --confirm --space my-space\n  Tearing down VPN in space my-space",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get peering info from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to space name bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "drains",
        "command": "get",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "display the log drain for a space",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space for which to get log drain",
            "hasValue": true,
            "hidden": false,
            "required": true
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "drains",
        "command": "set",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "replaces the log drain for a space",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": true,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "url",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space for which to set log drain",
            "hasValue": true,
            "hidden": false,
            "required": true
          }
        ]
      },
      {
        "topic": "trusted-ips",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "list trusted IP ranges for a space",
        "default": false,
        "help": "Trusted IP ranges are only available on Private Spaces.\n\nThe space name is a required parameter. Newly created spaces will have 0.0.0.0/0 set by default\nallowing all traffic to applications in the space. More than one CIDR block can be provided at\na time to the commands listed below. For example 1.2.3.4/20 and 5.6.7.8/20 can be added with:",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get inbound rules from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "trusted-ips",
        "command": "add",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "Add one range to the list of trusted IP ranges",
        "default": false,
        "help": "Uses CIDR notation.\n\nExample:\n  $ heroku trusted-ips:add --space my-space 192.168.2.0/24\n  Added 192.168.0.1/24 to trusted IP ranges on my-space",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "source",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to add rule to",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to space name to bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "trusted-ips",
        "command": "remove",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "Remove a range from the list of trusted IP ranges",
        "default": false,
        "help": "Uses CIDR notation.\n\nExample:\n  $ heroku trusted-ips:remove --space my-space 192.168.2.0/24\n  Removed 192.168.2.0/24 from trusted IP ranges on my-space",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "source",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "",
            "description": "space to remove rule from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to space name to bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "outbound-rules",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "list Outbound Rules for a space",
        "default": false,
        "help": "Outbound Rules are only available on Private Spaces.\n\nNewly created spaces will have an \"Allow All\" rule set by default\nallowing all egress dyno traffic outside of the space.  You can\nremove this default rule to completely stop your private dynos from\ntalking to the world.\n\nYou can add specific rules that only allow your dyno to communicate with trusted hosts.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "space",
            "optional": true,
            "hidden": true
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to get outbound rules from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "outbound-rules",
        "command": "add",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "Add outbound rules to a Private Space",
        "default": false,
        "help": "The destination flag uses CIDR notation.\n\nExample:\n  $ heroku outbound-rules:add --space my-space --dest 192.168.2.0/24 --protocol tcp --port 80\n  Added 192.168.0.1/24 to the outbound rules on my-space\n\nExample with port range:\n  $ heroku outbound-rules:add --space my-space --dest 192.168.2.0/24 --protocol tcp --port 80-100\n  Added 192.168.0.1/24 to the outbound rules on my-space\n\nExample opening up everything\n  $ heroku outbound-rules:add --space my-space --dest 0.0.0.0/0 --protocol any --port any\n  Added 0.0.0.0/0 to the outbound rules on my-space\n\nICMP Rules\nThe ICMP protocol has types, not ports, but the underlying systems treat them as the same. For this reason,\nwhen you want to allow ICMP traffic you will use the --port flag to specify the ICMP types you want to\nallow. ICMP types are numbered, 0-255.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [],
        "flags": [
          {
            "name": "space",
            "char": "s",
            "description": "space to add rule to",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to space name to bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "dest",
            "char": "",
            "description": "target CIDR block dynos are allowed to communicate with",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "protocol",
            "char": "",
            "description": "the protocol dynos are allowed to use when communicating with hosts in destination CIDR block. Valid protocols are \"tcp\", \"udp\", \"icmp\", \"0-255\" and \"any\".",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "port",
            "char": "",
            "description": "the port dynos are allowed to use when communicating with hosts in destination CIDR block. Accepts a range in `\u003clowest port\u003e-\u003chighest port\u003e` format. 0 is the minimum. The maximum port allowed is 65535, except for ICMP with a maximum of 255.",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "outbound-rules",
        "command": "remove",
        "plugin": "heroku-spaces",
        "usage": "",
        "description": "Remove a Rules from the list of Outbound Rules",
        "default": false,
        "help": "Example:\n  $ heroku outbound-rules:remove --space my-space 4\n  Removed 192.168.2.0/24 from trusted IP ranges on my-space",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "ruleNumber",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "space",
            "char": "",
            "description": "space to remove rule from",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "confirm",
            "char": "",
            "description": "set to space name to bypass confirm prompt",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:24.756589743Z"
  },
  {
    "name": "heroku-git",
    "tag": "2.5.10",
    "version": "2.5.10",
    "topics": null,
    "topic": {
      "name": "git",
      "description": "manage local git repository for app",
      "hidden": false,
      "Commands": null
    },
    "commands": [
      {
        "topic": "git",
        "command": "remote",
        "plugin": "heroku-git",
        "usage": "",
        "description": "adds a git remote to an app repo",
        "default": false,
        "help": "extra arguments will be passed to git remote add\n\nExamples:\n\n  # set git remote heroku to https://git.heroku.com/example.git\n  $ heroku git:remote -a example\n\n  # set git remote heroku-staging to https://git.heroku.com/example-staging.git\n  $ heroku git:remote --remote heroku-staging -a example",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": true,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "app",
            "char": "a",
            "description": "the Heroku app to use",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "remote",
            "char": "r",
            "description": "the git remote to create",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "ssh-git",
            "char": "",
            "description": "use SSH git protocol",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "git",
        "command": "clone",
        "plugin": "heroku-git",
        "usage": "",
        "description": "clones a heroku app to your local machine at DIRECTORY (defaults to app name)",
        "default": false,
        "help": "Examples:\n\n  $ heroku git:clone -a example\n  Cloning into 'example'...\n  remote: Counting objects: 42, done.\n  ...",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "DIRECTORY",
            "optional": true,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "app",
            "char": "a",
            "description": "the Heroku app to use",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "remote",
            "char": "r",
            "description": "the git remote to create, default \"heroku\"",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "ssh-git",
            "char": "",
            "description": "use SSH git protocol",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      }
    ],
    "updated_at": "2017-02-15T20:52:25.764018189Z"
  },
  {
    "name": "heroku-cli-oauth",
    "tag": "2.0.6",
    "version": "2.0.6",
    "topics": [
      {
        "name": "authorizations",
        "description": "OAuth authorizations",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "clients",
        "description": "OAuth clients on the platform",
        "hidden": false,
        "Commands": null
      },
      {
        "name": "sessions",
        "description": "OAuth sessions",
        "hidden": false,
        "Commands": null
      }
    ],
    "topic": null,
    "commands": [
      {
        "topic": "authorizations",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "list OAuth authorizations",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "authorizations",
        "command": "create",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "create a new OAuth authorization",
        "default": false,
        "help": "This creates an authorization with access to your Heroku account.",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "description",
            "char": "d",
            "description": "set a custom authorization description",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "scope",
            "char": "s",
            "description": "set custom OAuth scopes",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "expires-in",
            "char": "e",
            "description": "set expiration in seconds",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "short",
            "char": "",
            "description": "only output token",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "authorizations",
        "command": "info",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "show an existing OAuth authorization",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "authorizations",
        "command": "revoke",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "revoke OAuth authorization",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "authorizations",
        "command": "update",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "updates an OAuth authorization",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "description",
            "char": "d",
            "description": "set a custom authorization description",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "client-id",
            "char": "",
            "description": "identifier of OAuth client to set",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "client-secret",
            "char": "",
            "description": "secret of OAuth client to set",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "clients",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "list your OAuth clients",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "clients",
        "command": "create",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "create a new OAuth client",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "name",
            "optional": false,
            "hidden": false
          },
          {
            "name": "redirect_uri",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "shell",
            "char": "s",
            "description": "output in shell format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "clients",
        "command": "destroy",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "delete client by ID",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      },
      {
        "topic": "clients",
        "command": "info",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "show details of an oauth client",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          },
          {
            "name": "shell",
            "char": "s",
            "description": "output in shell format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "clients",
        "command": "update",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "(sudo) update OAuth client",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": [
          {
            "name": "name",
            "char": "n",
            "description": "change the client name",
            "hasValue": true,
            "hidden": false,
            "required": false
          },
          {
            "name": "url",
            "char": "",
            "description": "change the client redirect URL",
            "hasValue": true,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "sessions",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "list your OAuth sessions",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": null,
        "flags": [
          {
            "name": "json",
            "char": "",
            "description": "output in json format",
            "hasValue": false,
            "hidden": false,
            "required": false
          }
        ]
      },
      {
        "topic": "sessions",
        "command": "destroy",
        "plugin": "heroku-cli-oauth",
        "usage": "",
        "description": "delete (logout) OAuth session by ID",
        "default": false,
        "help": "",
        "fullHelp": "",
        "hidden": false,
        "needsApp": false,
        "wantsApp": false,
        "needsOrg": false,
        "wantsOrg": false,
        "needsAuth": true,
        "variableArgs": false,
        "disableAnalytics": false,
        "args": [
          {
            "name": "id",
            "optional": false,
            "hidden": false
          }
        ],
        "flags": null
      }
    ],
    "updated_at": "2017-02-15T20:52:23.950321612Z"
  }
]